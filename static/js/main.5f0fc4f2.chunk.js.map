{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode1","href","title","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","console","log","target","value","backgroundColor","rows","newText","showAlert","split","length","defaultProps","App","mode","setMode","setAlert","message","setTimeout","document","body","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f0fc4f2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>\r\n    {\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n  \r\n     \r\n          \r\n           props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n<strong>{capitalize(props.alert.type)} </strong>: {props.alert.msg}\r\n  {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n</div> \r\n\r\n      \r\n      \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        // <div>\r\n        //     Hello I am navabar\r\n        // </div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode1} bg-${props.mode1}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a href=\"/\" className=\"nav-link active\" aria-current=\"page\" >Home</a>\r\n          {/* <a href=\"/\" className=\"nav-link active\" aria-current=\"page\" >Home</a> */}\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li>\r\n     \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode1==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n\r\n    </div>\r\n    \r\n  </div>\r\n</nav>\r\n    )\r\n}\r\nNavbar.propTypes={title:PropTypes.string.isRequired,aboutText:PropTypes.string,}\r\n Navbar.defaultProps={title:\"hello\",aboutText:\"About\"}\r\n","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>\r\n    {\r\n    \r\n        console.log(\"Uppercase was clicked\"+text)\r\n        let newText=text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UpperCase!\",\"success\")\r\n    }\r\n    const handleLoClick=()=>\r\n    {\r\n    \r\n        console.log(\"Lowercase was clicked\"+text)\r\n        let newText=text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to LowerCase!\",\"success\")\r\n    }\r\n    const handleOnChange=(event)=>\r\n    {\r\n        console.log(\"On change\")\r\n        console.log(event.target.value)\r\n        setText(event.target.value)\r\n    }\r\n    const handleClearClick=(event)=>\r\n    {\r\n        console.log(\"On change\")\r\n  let newText=' ';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\",\"success\")\r\n    }\r\n    const [text,setText]=useState(\"\")\r\n    //text=\"hello\"  //wrong way to change state\r\n   // setText(\"New Text\")\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode1==='dark'?'white':'rgb(2 26 60)'}}>\r\n            <h2 >{props.heading}</h2>\r\n           <div className=\"mb-3\">\r\n \r\n  \r\n  <textarea className=\"form-control\"  onChange={handleOnChange} \r\n  style={{backgroundColor:props.mode1==='dark'?'grey':'white',\r\n  color:props.mode1==='dark'?'white':'rgb(2 26 60)'}}\r\n  value={text} id=\"myBox\" rows=\"9\"></textarea>\r\n</div>\r\n\r\n<button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n<button className=\"btn btn-primary\" onClick={handleClearClick}>Clear Text</button>\r\n\r\n\r\n\r\n</div>\r\n<div className=\"cantainer my-3\" style={{color:props.mode1==='dark'?'white':'rgb(2 26 60)'}}>\r\n    <h2>Your Text summary</h2>\r\n    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n    <p>{0.008*text.split(\" \").length} minutes read time</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter a something in textbox above to preview it\"}</p>\r\n</div>\r\n</>\r\n    )\r\n}\r\nTextForm.propTypes={heading:PropTypes.string.isRequired}\r\n\r\n","\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 3000)\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode(\"dark\")\n      document.body.style.background = \"rgb(2 26 60)\"\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Dark Mode'\n      // setInterval(()=>\n      // {\n      //   document.title='TextUtils is amazing Mode'\n      // },2000);\n      // setInterval(()=>\n      // {\n      //   document.title='Install TextUtils now'\n      // },1500);\n    }\n\n    else {\n      setMode(\"light\")\n      document.body.style.background = \"white\"\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Light Mode'\n\n    }\n\n\n  }\n  return (\n\n    <>\n      {/* <Router> */}\n\n        <Navbar title=\"Textutil\" mode1={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        {/* <Navbar title=\"Textutils3\" aboutText=\"About2\"/> */}\n\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\"> */}\n        {/* <About /> */}\n            {/* </Route> */}\n\n            {/* <Route exact path=\"/\"> */}\n              <TextForm heading=\"Enter the text to analyze\" showAlert={showAlert} mode1={mode} />\n            {/* </Route>\n          </Switch> */}\n        </div>\n\n\n\n\n\n\n      {/* </Router> */}\n    </>\n\n\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}